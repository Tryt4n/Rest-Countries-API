@use "../../abstracts/mixins" as *;
@use "../../abstracts/variables" as v;
@use "../../base/functions" as func;

.country-searchbar {
  @include flex();
  gap: 1em;
  background: var(--searchbar-background);
  padding: 1rem;
  padding-left: 2rem;
  outline: func.rem(1) solid transparent;
  border-radius: v.$block-border-radius;
  box-shadow: v.$box-shadow;
  color: var(--searchbar-text-color);
  cursor: text;
  transition: v.$main-transition;
  @media (width > func.rem(768)) {
    width: max(func.rem(300), func.rem(500));
  }
  @media (width <= func.rem(768)) {
    width: 100%;
  }

  &__icon {
    width: func.rem(24);
    aspect-ratio: 1;
    color: var(--searchbar-icon-color);
    transition: v.$main-transition;
  }

  &__input {
    width: 100%;
    border: none;
    outline: none;
    background: inherit;
    font: inherit;
    font-weight: 600;
    color: inherit;
    &::placeholder {
      color: var(--searchbar-text-color-placeholder);
      font-weight: 300;
      transition: v.$main-transition;
    }
    &:where(:hover, :focus-visible)::placeholder {
      color: inherit;
    }
  }

  &:where(:hover, :focus-within) {
    outline: func.rem(1) solid var(--searchbar-outline-color);
  }
  &:where(:hover, :focus-within) .country-searchbar__icon {
    color: inherit;
  }
}

/* clears the ‘X’ from Internet Explorer */
input[type="search"]::-ms-clear {
  display: none;
  width: 0;
  height: 0;
}
input[type="search"]::-ms-reveal {
  display: none;
  width: 0;
  height: 0;
}
/* clears the ‘X’ from Chrome */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
  display: none;
}
